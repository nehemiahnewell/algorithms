Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

    Seven

Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

    Three

Calculate fib(10), fib(11), fib(12) by hand.

    (1)1
    (2)1
    (3)1 + 1 = 2
    (4)1 + 2 = 3
    (5)3 + 2 = 5
    (6)5 + 3 = 8
    (7)8 + 5 = 13
    (8)13 + 8 = 21
    (9)21 + 13 = 34
    *(10)34 + 21 = 55
    *(11)55 + 34 = 89
    *(12)89 + 55 = 144

Save the recursive implementation of the Fibonacci sequence above as fibonnaci_recursive.rb. Compare the time it takes to run fib(20) between the iterative solution from the previous checkpoint and recursive solutions.

    fibonnaci recursive 20  0.000000   0.000000   0.000000 (  0.001319)
    fibonnaci iterative 20  0.000000   0.000000   0.000000 (  0.000010)


Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

  Linear Search. . A binary search requires a sorted collection. Without the logic of a sorted collection you can't know which half of the collection
  to search in each future iteration.

Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.

  Binary Search. With a sorted collection you can complete the search in log n search rather then n searches.
  I would use an iterative solution, as they're almost always much more time efficant due to how the stack
  and memory works, even if a recursive solution might be more eligant.
  
